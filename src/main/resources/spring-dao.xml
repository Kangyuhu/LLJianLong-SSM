<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!--扫描service包,将service包下添加@Servcie注解的类添加到容器中-->
    <context:component-scan base-package="com.lljl">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--加载外部属性配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--数据源 -->
    <!-- 数据库连接池对象 -->
    <!-- 阿里 druid数据库连接池 (Spring集成Mybatis)-->
    <bean id="ds" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="url" value="${mysql.url}" />
        <property name="username" value="${mysql.username}" />
        <property name="password" value="${mysql.password}" />
        <property name="driverClassName" value="${mysql.driverClassName}" />
        <property name="filters" value="${jdbc.filters}" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${jdbc.maxActive}" />
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxWait}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${jdbc.minIdle}" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${jdbc.maxIdle}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="${jdbc.logAbandoned}" />
    </bean>
    <!-- 实例化SqlSessionFactory (Spring集成Mybatis)-->
    <bean id="sf" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--配置数据源对象-->
        <property name="dataSource" ref="ds"></property>
        <!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。
                *是个通配符，代表所有的文件，**代表所有目录下 -->
        <property name="mapperLocations" value="classpath:com/lljl/*/dao/*.xml"></property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties" value="helperDialect=mysql">
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!-- 实例化Mapper代理实现类 :生成一个dao层接口的实现类对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--设置需要扫描的包-->
        <property name="basePackage" value="com.lljl.*.dao"></property>
    </bean>

</beans>